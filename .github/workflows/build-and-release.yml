name: Build and Release (Windows x64)

on:
  # Build when a new tag is pushed (adjust as needed).
  push:
    tags:
      - '1*'
      - 'v*'
  # Allows manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Check-Out Repo
        uses: actions/checkout@v3

      - name: Set-Up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # or whichever version you need

      - name: Install Dependencies
        run: npm ci   # or 'npm install' if you prefer

      - name: Build
        run: npm run build:windows:x64  # or your build steps to create Windows .exe

      - name: Archive Artifacts
        # Save final .exe or .zip inside the workspace
        # Adjust the path to where electron-packager/electron-builder
        # actually puts the .exe
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-artifacts
          path: |
            builds/**/*
            # If your .exe is built to 'builds/<...>.exe', for example

  release:
    # Only run if the build job completes successfully
    needs: build-windows
    runs-on: windows-latest

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build-artifacts

      - name: Create GitHub Release
        # This step attaches the .exe files to the new GitHub release
        # If you want it to only happen on 'push tags'
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          # Optionally create a release from that tag
          name: "Release ${{ github.ref_name }}"
          artifacts: |
            builds/**/*.exe
          # Adjust as needed if your .exe is named differently
          body: |
            Automated Release for Windows Executable (x64).
